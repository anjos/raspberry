version: "3"

services:

  # Plex Media Server (and web client)
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    hostname: plex
    networks:
      - network
    ports:
      - 32400:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    healthcheck:
      test: curl --fail localhost:32400/web || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    volumes:
      - "plex:/config"
      - "/media:/data"
      - "/media/tmp:/transcode"
    environment:
      - "VERSION=docker"
      - "PLEX_CLAIM=${PLEX_CLAIM}"
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    devices:
      - "/dev/dri:/dev/dri"

  # Bittorrent client
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    restart: unless-stopped
    hostname: deluge
    networks:
      - network
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846  #optional
    healthcheck:
      test: curl --fail localhost:8112 || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    volumes:
      - "deluge:/config"
      - "/media/downloads:/media/downloads"
    environment:
      - "DELUGE_LOGLEVEL=error"
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"

  # Movie downloader/manager for usenet and torrent users.
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    hostname: radarr
    networks:
      - network
    ports:
      - 7878:7878
    healthcheck:
      test: curl --fail localhost:7878 || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    environment:
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    volumes:
      - "radarr:/config"
      - /media:/media

  # TV show downloader/manager for usenet and torrent users.
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    hostname: sonarr
    networks:
      - network
    ports:
      - 8989:8989
    healthcheck:
      test: curl --fail localhost:8989 || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    environment:
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    volumes:
      - "sonarr:/config"
      - /media:/media

  # Centralized indexer
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    hostname: prowlarr
    networks:
      - network
    ports:
      - 9696:9696
    healthcheck:
      test: curl --fail localhost:9696 || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    environment:
      - "TZ=${TZ}"
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    volumes:
      - "prowlarr:/config"

  # Captcha solver for cloudfare human controls
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    hostname: flaresolverr
    networks:
      - network
    ports:
      - 8191:8191
    healthcheck:
      test: curl --fail localhost:8191 || exit 1
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 2s
    environment:
      - "TZ=${TZ}"
      - "LOG_LEVEL=info"
      - "LOG_HTML=false"
      - "CAPTCHA_SOLVER=none"

# Networks for media services - allow services to be recognized by name
networks:
  network:
    driver: bridge

# Create volumes by visiting the "Volumes" tab on the left
volumes:
  plex:
  deluge:
  radarr:
  sonarr:
  prowlarr:
